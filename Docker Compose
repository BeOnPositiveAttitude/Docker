# если нам нужно запустить сразу несколько контейнеров, из которых строится наш итоговый сервис, на помощь приходит Docker Compose
# вместо множества команд:

docker run frenzy88/simple-webapp
docker run mongodb
docker run redis:alpine
docker run ansible

# мы можем написать docker-compose.yml:

services:
     web:
        image: "frenzy88/simple-webapp"
     database:
        image: "mongodb"
     messaging:
        image: "redis:alpine"
     orchestration:
        image: "ansible"
 
 docker compose up   #поднять контейнеры из yml-файла
 # контейнеры поднимаются на одном docker-хосте
 
 # link - опция командной строки для связи двух контейнеров друг с другом
 
docker run -d --name=redis redis
docker run -d --name=db postgres
docker run -d --name=vote -p 5000:80 --link redis:redis voting-app   #первый redis - имя контейнера, второй redis - имя хоста redis в коде voting-app
docker run -d --name=result -p 5001:80 --link db:db result-app
docker run -d --name=worker --link db:db --link redis:redis worker

# при создании линка фактически в файле /etc/hosts контейнера vote создается запись:
172.17.0.2 redis 89cd8eb563da
