# пример Dockerfile:
#####
FROM ubuntu   #базовый образ ОС контейнера, layer 1

RUN apt-get update   #запуск команды внутри ОС, layer 2
RUN apt-get install -y python3 python3-pip

RUN pip install flask   #layer 3
RUN pip install flask-mysql

COPY app.py /opt/app.py   #скопировать файлы из текущей директории в папку контейнера /opt, layer 4 

ENTRYPOINT FLASK_APP=/opt/source-code/app.py flask run  #какая команда будет выполнена при запуске контейнера, layer 5
#####
# контейнер представляет собой многослойный "пирог"

docker build Dockerfile -t frenzy88/my-custom-app   #t=tag, создание image из Dockerfile
docker build .
docker push frenzy88/my-custom-app   #пушим созданный image в Docker Hub
docker login   #залогиниться в аккаунт Docker

# структура Dockerfile:
INSTRUCTION argument

docker history frenzy88/simple-webapp   #смотреть историю создания слоев образа

# если один из слоев создания образа зафейлился, либо был добавлен новый слой Docker не начинает сборку с нуля, а продолжает с того места, где остановился
# и пересобирает нижестоящие слои

docker save gitlab/gitlab-ce:15.8.1-ce.0 -o gitlab-ce:15.8.1.tar   #сохранить образ из локального registry в .tar-архив
docker load -i image.tar   #загрузить образ из .tar-архива в локальный registry
